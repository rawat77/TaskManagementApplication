@model TaskManagementApplication.Models.Tasks

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Tasks</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DueDate" class="control-label"></label>
                <input asp-for="DueDate" class="form-control" />
                <span asp-validation-for="DueDate" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsCompleted" /> @Html.DisplayNameFor(model => model.IsCompleted)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="AssignedToId" class="control-label"></label>
                <select asp-for="AssignedToId" class="form-control" asp-items="ViewBag.AssignedToId"></select>
                <span asp-validation-for="AssignedToId" class="text-danger"></span>
            </div>
           
            <!-- Add new note -->
            <div class="form-group">
                <label asp-for="Notes" class="control-label">Add New Note</label>
                <textarea asp-for="NewNoteContent" class="form-control"></textarea>
                <span asp-validation-for="NewNoteContent" class="text-danger"></span>
            </div>

            @if (Model.Notes != null && Model.Notes.Any())
            {
                <div class="form-group">
                    <label class="control-label">Previous Notes</label>
                    <ul>
                        @foreach (var note in Model.Notes)
                        {
                            <li>@note.Content</li>
                        }
                    </ul>
                </div>
            }
            <div class="form-group">
                <label class="control-label">Upload Document</label>
                <input type="file" name="documentFile" class="form-control-file" />
                <span asp-validation-for="Documents" class="text-danger"></span>
            </div>

            @if (Model.Documents != null && Model.Documents.Any())
            {
                <div class="form-group">
                    <label class="control-label">Previous Documents</label>
                    <ul>
                        @foreach (var note in Model.Documents)
                        {
                            <li>@note.FilePath</li>
                        }
                    </ul>
                </div>
            }
            <br />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
